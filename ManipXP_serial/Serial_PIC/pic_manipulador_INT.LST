CCS PCM C Compiler, Version 4.014, 35284               16-jun-07 21:05

               Filename: C:\Users\Renato\Documents\Renato ELT\ManipXP_serial\Serial_PIC\pic_manipulador_INT.lst

               ROM used: 1233 words (15%)
                         Largest free fragment is 2048
               RAM used: 50 (14%) at main() level
                         79 (21%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   394
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.0
001C:  GOTO   01F
001D:  BTFSC  0C.0
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   22F
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device ADC=10  //NECESSÁRIO PARA HABILITAR CONVERSÃO EM 10 BITS 
.................... #fuses XT,WDT,PUT,NOBROWNOUT,NOLVP 
.................... #use delay(clock=4000000) 
.................... #use rs232(baud=19200, xmit=PIN_C6, rcv=PIN_C7, RESTART_WDT) 
....................  
.................... #define SWITCH_RS_AD PIN_B1 
.................... #define LED_1 PIN_C2 
....................  
.................... #define N_GDL 4 
....................  
.................... signed long valorint; 
.................... long temp; 
.................... int i=0; 
*
03A7:  BCF    03.5
03A8:  CLRF   2C
.................... int j, k; 
.................... long angulos[7] = {1500, 1500, 1500, 1500, 1500, 1500, 1500}; 
03A9:  MOVLW  DC
03AA:  MOVWF  2F
03AB:  MOVLW  05
03AC:  MOVWF  30
03AD:  MOVLW  DC
03AE:  MOVWF  31
03AF:  MOVLW  05
03B0:  MOVWF  32
03B1:  MOVLW  DC
03B2:  MOVWF  33
03B3:  MOVLW  05
03B4:  MOVWF  34
03B5:  MOVLW  DC
03B6:  MOVWF  35
03B7:  MOVLW  05
03B8:  MOVWF  36
03B9:  MOVLW  DC
03BA:  MOVWF  37
03BB:  MOVLW  05
03BC:  MOVWF  38
03BD:  MOVLW  DC
03BE:  MOVWF  39
03BF:  MOVLW  05
03C0:  MOVWF  3A
03C1:  MOVLW  DC
03C2:  MOVWF  3B
03C3:  MOVLW  05
03C4:  MOVWF  3C
.................... long soma_angulos = 0; 
03C5:  CLRF   3D
03C6:  CLRF   3E
.................... int output = 0b00000000; 
03C7:  CLRF   3F
.................... int ang; 
....................  
.................... #int_timer1 
.................... void trata_t1() { 
....................    ////////////////// FAZ PULSO ALTO /////////////////// 
....................    bit_clear(output, i-1); 
*
022F:  MOVLW  01
0230:  SUBWF  2C,W
0231:  MOVWF  4D
0232:  MOVLW  01
0233:  MOVWF  77
0234:  MOVF   4D,W
0235:  MOVWF  78
0236:  BTFSC  03.2
0237:  GOTO   23C
0238:  BCF    03.0
0239:  RLF    77,F
023A:  DECFSZ 78,F
023B:  GOTO   238
023C:  MOVF   77,W
023D:  XORLW  FF
023E:  ANDWF  3F,F
....................    output_d(output); 
023F:  BSF    03.5
0240:  CLRF   08
0241:  BCF    03.5
0242:  MOVF   3F,W
0243:  MOVWF  08
....................    if(i<7){ 
0244:  MOVF   2C,W
0245:  SUBLW  06
0246:  BTFSS  03.0
0247:  GOTO   27B
....................       bit_set(output, i); 
0248:  MOVLW  01
0249:  MOVWF  77
024A:  MOVF   2C,W
024B:  MOVWF  78
024C:  BTFSC  03.2
024D:  GOTO   252
024E:  BCF    03.0
024F:  RLF    77,F
0250:  DECFSZ 78,F
0251:  GOTO   24E
0252:  MOVF   77,W
0253:  IORWF  3F,F
....................       output_d(output); 
0254:  BSF    03.5
0255:  CLRF   08
0256:  BCF    03.5
0257:  MOVF   3F,W
0258:  MOVWF  08
....................       set_timer1(65536-angulos[i]); 
0259:  BCF    03.0
025A:  RLF    2C,W
025B:  ADDLW  2F
025C:  MOVWF  04
025D:  BCF    03.7
025E:  INCF   04,F
025F:  MOVF   00,W
0260:  MOVWF  7A
0261:  DECF   04,F
0262:  MOVF   00,W
0263:  SUBLW  00
0264:  MOVWF  4D
0265:  CLRF   4E
0266:  MOVF   7A,W
0267:  BTFSS  03.0
0268:  INCFSZ 7A,W
0269:  SUBWF  4E,F
026A:  MOVLW  01
026B:  MOVWF  4F
026C:  MOVLW  00
026D:  BTFSS  03.0
026E:  MOVLW  01
026F:  SUBWF  4F,F
0270:  CLRF   50
0271:  MOVLW  00
0272:  BTFSS  03.0
0273:  MOVLW  01
0274:  SUBWF  50,F
0275:  MOVF   4E,W
0276:  MOVWF  0F
0277:  MOVF   4D,W
0278:  MOVWF  0E
....................       ++i; 
0279:  INCF   2C,F
....................    }else{ 
027A:  GOTO   33D
....................       ///////////// FAZ DELAY DE TEMPO BAIXO ////////////// 
....................       i=0; 
027B:  CLRF   2C
....................       output=0; 
027C:  CLRF   3F
....................       output_d(output); 
027D:  BSF    03.5
027E:  CLRF   08
027F:  BCF    03.5
0280:  MOVF   3F,W
0281:  MOVWF  08
....................       if(!input(SWITCH_RS_AD)){ 
0282:  BSF    03.5
0283:  BSF    06.1
0284:  BCF    03.5
0285:  BTFSC  06.1
0286:  GOTO   330
....................          //////////// FAZ AQUISIÇÃO CASO CHAVE DESLIGADA ////////////// 
....................          for (k = 0; k < N_GDL; ++k){ 
0287:  CLRF   2E
0288:  MOVF   2E,W
0289:  SUBLW  03
028A:  BTFSS  03.0
028B:  GOTO   2FA
....................             set_adc_channel( k ); 
028C:  RLF    2E,W
028D:  MOVWF  77
028E:  RLF    77,F
028F:  RLF    77,F
0290:  MOVLW  F8
0291:  ANDWF  77,F
0292:  MOVF   1F,W
0293:  ANDLW  C7
0294:  IORWF  77,W
0295:  MOVWF  1F
....................             delay_us(20); 
0296:  MOVLW  06
0297:  MOVWF  77
0298:  DECFSZ 77,F
0299:  GOTO   298
029A:  NOP
....................             temp = read_adc(); 
029B:  BSF    1F.2
029C:  BTFSC  1F.2
029D:  GOTO   29C
029E:  BSF    03.5
029F:  MOVF   1E,W
02A0:  BCF    03.5
02A1:  MOVWF  2A
02A2:  MOVF   1E,W
02A3:  MOVWF  2B
....................             angulos[k] = (float)temp*1.75953+500;//angulos[k] = temp*2+500;  
02A4:  BCF    03.0
02A5:  RLF    2E,W
02A6:  ADDLW  2F
02A7:  MOVWF  04
02A8:  BCF    03.7
02A9:  MOVF   2B,W
02AA:  MOVWF  50
02AB:  MOVF   2A,W
02AC:  MOVWF  4F
02AD:  GOTO   035
02AE:  MOVF   77,W
02AF:  MOVWF  4F
02B0:  MOVF   78,W
02B1:  MOVWF  50
02B2:  MOVF   79,W
02B3:  MOVWF  51
02B4:  MOVF   7A,W
02B5:  MOVWF  52
02B6:  MOVWF  56
02B7:  MOVF   79,W
02B8:  MOVWF  55
02B9:  MOVF   78,W
02BA:  MOVWF  54
02BB:  MOVF   77,W
02BC:  MOVWF  53
02BD:  MOVLW  47
02BE:  MOVWF  5A
02BF:  MOVLW  38
02C0:  MOVWF  59
02C1:  MOVLW  61
02C2:  MOVWF  58
02C3:  MOVLW  7F
02C4:  MOVWF  57
02C5:  GOTO   054
02C6:  MOVF   77,W
02C7:  MOVWF  53
02C8:  MOVF   78,W
02C9:  MOVWF  54
02CA:  MOVF   79,W
02CB:  MOVWF  55
02CC:  MOVF   7A,W
02CD:  MOVWF  56
02CE:  CLRF   58
02CF:  MOVF   04,W
02D0:  MOVWF  57
02D1:  BCF    58.0
02D2:  BTFSC  03.7
02D3:  BSF    58.0
02D4:  BCF    03.1
02D5:  MOVF   7A,W
02D6:  MOVWF  5C
02D7:  MOVF   79,W
02D8:  MOVWF  5B
02D9:  MOVF   78,W
02DA:  MOVWF  5A
02DB:  MOVF   77,W
02DC:  MOVWF  59
02DD:  CLRF   60
02DE:  CLRF   5F
02DF:  MOVLW  7A
02E0:  MOVWF  5E
02E1:  MOVLW  87
02E2:  MOVWF  5D
02E3:  GOTO   0CB
02E4:  MOVF   57,W
02E5:  MOVWF  04
02E6:  BCF    03.7
02E7:  BTFSC  58.0
02E8:  BSF    03.7
02E9:  MOVF   7A,W
02EA:  MOVWF  5C
02EB:  MOVF   79,W
02EC:  MOVWF  5B
02ED:  MOVF   78,W
02EE:  MOVWF  5A
02EF:  MOVF   77,W
02F0:  MOVWF  59
02F1:  GOTO   20E
02F2:  INCF   04,F
02F3:  MOVF   79,W
02F4:  MOVWF  00
02F5:  DECF   04,F
02F6:  MOVF   78,W
02F7:  MOVWF  00
....................          } 
02F8:  INCF   2E,F
02F9:  GOTO   288
....................          soma_angulos = angulos[0]+angulos[1]+angulos[2]+angulos[3] 
....................                         +angulos[4]+angulos[5]+angulos[6]; 
02FA:  MOVF   31,W
02FB:  ADDWF  2F,W
02FC:  MOVWF  4D
02FD:  MOVF   30,W
02FE:  MOVWF  4E
02FF:  MOVF   32,W
0300:  BTFSC  03.0
0301:  INCFSZ 32,W
0302:  ADDWF  4E,F
0303:  MOVF   33,W
0304:  ADDWF  4D,W
0305:  MOVWF  4F
0306:  MOVF   4E,W
0307:  MOVWF  50
0308:  MOVF   34,W
0309:  BTFSC  03.0
030A:  INCFSZ 34,W
030B:  ADDWF  50,F
030C:  MOVF   35,W
030D:  ADDWF  4F,W
030E:  MOVWF  51
030F:  MOVF   50,W
0310:  MOVWF  52
0311:  MOVF   36,W
0312:  BTFSC  03.0
0313:  INCFSZ 36,W
0314:  ADDWF  52,F
0315:  MOVF   37,W
0316:  ADDWF  51,W
0317:  MOVWF  53
0318:  MOVF   52,W
0319:  MOVWF  54
031A:  MOVF   38,W
031B:  BTFSC  03.0
031C:  INCFSZ 38,W
031D:  ADDWF  54,F
031E:  MOVF   39,W
031F:  ADDWF  53,W
0320:  MOVWF  55
0321:  MOVF   54,W
0322:  MOVWF  56
0323:  MOVF   3A,W
0324:  BTFSC  03.0
0325:  INCFSZ 3A,W
0326:  ADDWF  56,F
0327:  MOVF   3B,W
0328:  ADDWF  55,W
0329:  MOVWF  3D
032A:  MOVF   56,W
032B:  MOVWF  3E
032C:  MOVF   3C,W
032D:  BTFSC  03.0
032E:  INCFSZ 3C,W
032F:  ADDWF  3E,F
....................       } 
....................       set_timer1(47000+soma_angulos); //set_timer1(55536); 
0330:  MOVLW  98
0331:  ADDWF  3D,W
0332:  MOVWF  4D
0333:  MOVF   3E,W
0334:  MOVWF  4E
0335:  MOVLW  B7
0336:  BTFSC  03.0
0337:  MOVLW  B8
0338:  ADDWF  4E,F
0339:  MOVF   4E,W
033A:  MOVWF  0F
033B:  MOVF   4D,W
033C:  MOVWF  0E
....................    } 
.................... } 
....................  
....................  
033D:  BCF    0C.0
033E:  BCF    0A.3
033F:  BCF    0A.4
0340:  GOTO   01F
.................... void main() { 
*
0394:  CLRF   04
0395:  BCF    03.7
0396:  MOVLW  1F
0397:  ANDWF  03,F
0398:  MOVLW  0C
0399:  BSF    03.5
039A:  MOVWF  19
039B:  MOVLW  A6
039C:  MOVWF  18
039D:  MOVLW  90
039E:  BCF    03.5
039F:  MOVWF  18
03A0:  BSF    03.5
03A1:  BSF    1F.0
03A2:  BSF    1F.1
03A3:  BSF    1F.2
03A4:  BCF    1F.3
03A5:  MOVLW  07
03A6:  MOVWF  1C
....................    set_tris_a(0b11111111); 
*
03CA:  MOVLW  FF
03CB:  BSF    03.5
03CC:  MOVWF  05
....................    set_tris_d(0b00000000); 
03CD:  MOVLW  00
03CE:  MOVWF  08
....................    setup_port_a( ALL_ANALOG ); 
03CF:  BCF    1F.0
03D0:  BCF    1F.1
03D1:  BCF    1F.2
03D2:  BCF    1F.3
....................    setup_adc( ADC_CLOCK_DIV_16 ); 
03D3:  BSF    1F.6
03D4:  BCF    03.5
03D5:  BSF    1F.6
03D6:  BCF    1F.7
03D7:  BSF    03.5
03D8:  BSF    1F.7
03D9:  BCF    03.5
03DA:  BSF    1F.0
....................     
....................    setup_wdt(WDT_1152MS); 
03DB:  MOVLW  0E
03DC:  MOVWF  77
03DD:  MOVLW  07
03DE:  CLRF   01
03DF:  MOVLW  81
03E0:  MOVWF  04
03E1:  BCF    03.7
03E2:  MOVF   00,W
03E3:  ANDLW  F0
03E4:  IORLW  07
03E5:  MOVWF  00
03E6:  CLRWDT
03E7:  MOVF   00,W
03E8:  ANDLW  F7
03E9:  BTFSC  77.3
03EA:  ANDLW  F0
03EB:  IORWF  77,W
03EC:  MOVWF  00
....................    setup_timer_1 ( T1_INTERNAL | T1_DIV_BY_1 ); 
03ED:  MOVLW  85
03EE:  MOVWF  10
....................    enable_interrupts (global); 
03EF:  MOVLW  C0
03F0:  IORWF  0B,F
....................    //enable_interrupts(INT_RDA); 
....................    enable_interrupts (int_timer1); 
03F1:  BSF    03.5
03F2:  BSF    0C.0
....................    set_timer1(0); 
03F3:  BCF    03.5
03F4:  CLRF   0F
03F5:  CLRF   0E
....................  
....................    while (true){ 
....................       restart_wdt(); 
03F6:  CLRWDT
....................       if(input(SWITCH_RS_AD)){ 
03F7:  BSF    03.5
03F8:  BSF    06.1
03F9:  BCF    03.5
03FA:  BTFSS  06.1
03FB:  GOTO   478
....................          output_high(LED_1); 
*
03C8:  MOVLW  FF
03C9:  MOVWF  41
*
03FC:  BCF    41.2
03FD:  MOVF   41,W
03FE:  BSF    03.5
03FF:  MOVWF  07
0400:  BCF    03.5
0401:  BSF    07.2
....................          //////// RECEBE ANGULOS POR RS232 CASO CHAVE LIGADA //////// 
....................          for (j = 0; j < N_GDL; ++j){ 
0402:  CLRF   2D
0403:  MOVF   2D,W
0404:  SUBLW  03
0405:  BTFSS  03.0
0406:  GOTO   441
....................             putc(j+1); 
0407:  MOVLW  01
0408:  ADDWF  2D,W
0409:  MOVWF  42
040A:  CLRWDT
040B:  BTFSS  0C.4
040C:  GOTO   40A
040D:  MOVWF  19
....................             valorint = getc(); 
040E:  CLRWDT
040F:  BTFSS  0C.5
0410:  GOTO   40E
0411:  MOVF   1A,W
0412:  CLRF   7A
0413:  MOVWF  28
0414:  MOVF   7A,W
0415:  MOVWF  29
....................             valorint = valorint - 100; 
0416:  MOVLW  64
0417:  SUBWF  28,F
0418:  MOVLW  00
0419:  BTFSS  03.0
041A:  MOVLW  01
041B:  SUBWF  29,F
....................             angulos[j] = valorint*15/2 + 1500; 
041C:  BCF    03.0
041D:  RLF    2D,W
041E:  ADDLW  2F
041F:  MOVWF  04
0420:  BCF    03.7
0421:  MOVF   29,W
0422:  MOVWF  47
0423:  MOVF   28,W
0424:  MOVWF  46
0425:  CLRF   49
0426:  MOVLW  0F
0427:  MOVWF  48
0428:  CALL   341
0429:  MOVF   79,W
042A:  MOVWF  45
042B:  MOVF   78,W
042C:  MOVWF  44
042D:  MOVF   79,W
042E:  MOVWF  48
042F:  MOVF   78,W
0430:  MOVWF  47
0431:  CLRF   4A
0432:  MOVLW  02
0433:  MOVWF  49
0434:  CALL   356
0435:  MOVLW  DC
0436:  ADDWF  78,W
0437:  MOVWF  00
0438:  INCF   04,F
0439:  MOVF   79,W
043A:  MOVWF  00
043B:  MOVLW  05
043C:  BTFSC  03.0
043D:  MOVLW  06
043E:  ADDWF  00,F
....................          } 
043F:  INCF   2D,F
0440:  GOTO   403
....................          soma_angulos = angulos[0]+angulos[1]+angulos[2]+angulos[3] 
....................                         +angulos[4]+angulos[5]+angulos[6]; 
0441:  MOVF   31,W
0442:  ADDWF  2F,W
0443:  MOVWF  42
0444:  MOVF   30,W
0445:  MOVWF  43
0446:  MOVF   32,W
0447:  BTFSC  03.0
0448:  INCFSZ 32,W
0449:  ADDWF  43,F
044A:  MOVF   33,W
044B:  ADDWF  42,W
044C:  MOVWF  44
044D:  MOVF   43,W
044E:  MOVWF  45
044F:  MOVF   34,W
0450:  BTFSC  03.0
0451:  INCFSZ 34,W
0452:  ADDWF  45,F
0453:  MOVF   35,W
0454:  ADDWF  44,W
0455:  MOVWF  46
0456:  MOVF   45,W
0457:  MOVWF  47
0458:  MOVF   36,W
0459:  BTFSC  03.0
045A:  INCFSZ 36,W
045B:  ADDWF  47,F
045C:  MOVF   37,W
045D:  ADDWF  46,W
045E:  MOVWF  48
045F:  MOVF   47,W
0460:  MOVWF  49
0461:  MOVF   38,W
0462:  BTFSC  03.0
0463:  INCFSZ 38,W
0464:  ADDWF  49,F
0465:  MOVF   39,W
0466:  ADDWF  48,W
0467:  MOVWF  4A
0468:  MOVF   49,W
0469:  MOVWF  4B
046A:  MOVF   3A,W
046B:  BTFSC  03.0
046C:  INCFSZ 3A,W
046D:  ADDWF  4B,F
046E:  MOVF   3B,W
046F:  ADDWF  4A,W
0470:  MOVWF  3D
0471:  MOVF   4B,W
0472:  MOVWF  3E
0473:  MOVF   3C,W
0474:  BTFSC  03.0
0475:  INCFSZ 3C,W
0476:  ADDWF  3E,F
....................       } 
....................       else{ 
0477:  GOTO   4CF
....................          output_low(LED_1); 
0478:  BCF    41.2
0479:  MOVF   41,W
047A:  BSF    03.5
047B:  MOVWF  07
047C:  BCF    03.5
047D:  BCF    07.2
....................          //////// ENVIA ANGULOS POR RS232 CASO CHAVE DESLIGADA //////// 
....................          for (j = 0; j < N_GDL; ++j){ 
047E:  CLRF   2D
047F:  MOVF   2D,W
0480:  SUBLW  03
0481:  BTFSS  03.0
0482:  GOTO   4CF
....................             ang = (signed long)(angulos[j]-1500)*2/15+121;//(float)((angulos[n-1]-600)/1.7595)+1; 
0483:  BCF    03.0
0484:  RLF    2D,W
0485:  ADDLW  2F
0486:  MOVWF  04
0487:  BCF    03.7
0488:  INCF   04,F
0489:  MOVF   00,W
048A:  MOVWF  43
048B:  DECF   04,F
048C:  MOVF   00,W
048D:  MOVWF  42
048E:  MOVLW  DC
048F:  SUBWF  42,W
0490:  MOVWF  77
0491:  MOVF   43,W
0492:  MOVWF  7A
0493:  MOVLW  05
0494:  BTFSS  03.0
0495:  MOVLW  06
0496:  SUBWF  7A,F
0497:  MOVF   77,W
0498:  MOVWF  44
0499:  MOVF   7A,W
049A:  MOVWF  45
049B:  MOVWF  47
049C:  MOVF   77,W
049D:  MOVWF  46
049E:  CLRF   49
049F:  MOVLW  02
04A0:  MOVWF  48
04A1:  CALL   341
04A2:  MOVF   79,W
04A3:  MOVWF  46
04A4:  MOVF   78,W
04A5:  MOVWF  45
04A6:  MOVF   79,W
04A7:  MOVWF  48
04A8:  MOVF   78,W
04A9:  MOVWF  47
04AA:  CLRF   4A
04AB:  MOVLW  0F
04AC:  MOVWF  49
04AD:  CALL   356
04AE:  MOVF   78,W
04AF:  MOVWF  46
04B0:  MOVLW  79
04B1:  ADDWF  78,W
04B2:  MOVWF  78
04B3:  MOVF   79,W
04B4:  MOVWF  7A
04B5:  BTFSC  03.0
04B6:  INCF   7A,F
04B7:  MOVF   78,W
04B8:  MOVWF  40
....................             putc(j+1); 
04B9:  MOVLW  01
04BA:  ADDWF  2D,W
04BB:  MOVWF  42
04BC:  CLRWDT
04BD:  BTFSS  0C.4
04BE:  GOTO   4BC
04BF:  MOVWF  19
....................             putc(ang); 
04C0:  MOVF   40,W
04C1:  CLRWDT
04C2:  BTFSS  0C.4
04C3:  GOTO   4C1
04C4:  MOVWF  19
....................             valorint = getc(); //só para sincronizar 
04C5:  CLRWDT
04C6:  BTFSS  0C.5
04C7:  GOTO   4C5
04C8:  MOVF   1A,W
04C9:  CLRF   7A
04CA:  MOVWF  28
04CB:  MOVF   7A,W
04CC:  MOVWF  29
....................          } 
04CD:  INCF   2D,F
04CE:  GOTO   47F
....................       } 
....................    } 
04CF:  GOTO   3F6
.................... } 
04D0:  SLEEP

Configuration Fuses:
   Word  1: 3F35   XT WDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT

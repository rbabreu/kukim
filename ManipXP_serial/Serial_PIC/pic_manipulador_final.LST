CCS PCM C Compiler, Version 3.203, 16465

               Filename: D:\Meus documentos\Renato ELT\OpenGL\ManipXP_serial\Serial_PIC\pic_manipulador_final.LST

               ROM used: 1243 words (15%)
                         Largest free fragment is 2048
               RAM used: 50 (29%) at main() level
                         77 (44%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   400
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.0
001C:  GOTO   01F
001D:  BTFSC  0C.0
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   284
....................  #include <16f877a.h> 
....................  //////// Standard Header file for the PIC16F877A device ////////////////  
.................... #device PIC16F877A  
.................... #list  
....................  
.................... #device ADC=10  //NECESSÁRIO PARA HABILITAR CONVERSÃO EM 10 BITS  
.................... #fuses HS,NOWDT,PUT,NOBROWNOUT,NOLVP  
.................... #use delay(clock=4000000)  
.................... #use rs232(baud=19200, xmit=PIN_C6, rcv=PIN_C7)  
....................   
.................... #define SWITCH_RS_AD PIN_B1  
.................... #define LED_1 PIN_C2  
....................   
.................... char valor;  
.................... signed long valorint;  
.................... long temp;  
.................... int i=0;  
*
0413:  CLRF   2E
.................... int j, k;  
.................... long angulos[7] = {1500, 1500, 1500, 1500, 1500, 1500, 1500};  
0414:  MOVLW  DC
0415:  MOVWF  31
0416:  MOVLW  05
0417:  MOVWF  32
0418:  MOVLW  DC
0419:  MOVWF  33
041A:  MOVLW  05
041B:  MOVWF  34
041C:  MOVLW  DC
041D:  MOVWF  35
041E:  MOVLW  05
041F:  MOVWF  36
0420:  MOVLW  DC
0421:  MOVWF  37
0422:  MOVLW  05
0423:  MOVWF  38
0424:  MOVLW  DC
0425:  MOVWF  39
0426:  MOVLW  05
0427:  MOVWF  3A
0428:  MOVLW  DC
0429:  MOVWF  3B
042A:  MOVLW  05
042B:  MOVWF  3C
042C:  MOVLW  DC
042D:  MOVWF  3D
042E:  MOVLW  05
042F:  MOVWF  3E
.................... long soma_angulos = 0;  
0430:  CLRF   3F
0431:  CLRF   40
.................... int output = 0b00000000;  
0432:  CLRF   41
....................   
....................   
....................   
.................... //#INT_RDA  
.................... void trata_rs232(){  
....................    //////// ENVIA ANGULOS POR RS232 CASO CHAVE DESLIGADA ////////  
....................    int ang;  
....................    int n, m;  
....................    n = getc();  
*
03C0:  BTFSS  0C.5
03C1:  GOTO   3C0
03C2:  MOVF   1A,W
03C3:  MOVWF  4F
....................    ang = ((signed int)((signed long)(angulos[n-1]-1500)*2/15))+121;  
03C4:  MOVLW  01
03C5:  SUBWF  4F,W
03C6:  MOVWF  77
03C7:  BCF    03.0
03C8:  RLF    77,F
03C9:  MOVF   77,W
03CA:  ADDLW  31
03CB:  MOVWF  04
03CC:  INCF   04,F
03CD:  MOVF   00,W
03CE:  MOVWF  53
03CF:  DECF   04,F
03D0:  MOVF   00,W
03D1:  MOVWF  52
03D2:  MOVLW  DC
03D3:  SUBWF  52,W
03D4:  MOVWF  54
03D5:  MOVF   53,W
03D6:  MOVWF  55
03D7:  MOVLW  05
03D8:  BTFSS  03.0
03D9:  MOVLW  06
03DA:  SUBWF  55,F
03DB:  MOVF   55,W
03DC:  MOVWF  57
03DD:  MOVF   54,W
03DE:  MOVWF  56
03DF:  CLRF   59
03E0:  MOVLW  02
03E1:  MOVWF  58
03E2:  CALL   230
03E3:  MOVF   79,W
03E4:  MOVWF  56
03E5:  MOVF   78,W
03E6:  MOVWF  55
03E7:  MOVF   79,W
03E8:  MOVWF  58
03E9:  MOVF   78,W
03EA:  MOVWF  57
03EB:  CLRF   5A
03EC:  MOVLW  0F
03ED:  MOVWF  59
03EE:  CALL   245
03EF:  MOVLW  79
03F0:  ADDWF  78,W
03F1:  MOVWF  4E
....................    //disable_interrupts (global);  
....................    //for (m = 0; m < 2; m++){ //TRANSMITE A VARIAVEL DE 16 BITS EM 2 VEZES DE 8  
....................       putc(ang);//putc(*(&ang + m));  
03F2:  MOVF   4E,W
03F3:  BTFSS  0C.4
03F4:  GOTO   3F3
03F5:  MOVWF  19
....................    //}  
....................    //enable_interrupts (global);  
.................... }  
....................   
.................... #int_timer1  
.................... void trata_t1() {  
....................    ////////////////// FAZ PULSO ALTO ///////////////////  
....................    bit_clear(output, i-1);  
*
0284:  MOVLW  01
0285:  SUBWF  2E,W
0286:  MOVWF  4E
0287:  MOVLW  01
0288:  MOVWF  77
0289:  MOVF   4E,W
028A:  MOVWF  78
028B:  BTFSC  03.2
028C:  GOTO   291
028D:  BCF    03.0
028E:  RLF    77,F
028F:  DECFSZ 78,F
0290:  GOTO   28D
0291:  MOVF   77,W
0292:  XORLW  FF
0293:  ANDWF  41,F
....................    output_d(output);  
0294:  MOVLW  00
0295:  BSF    03.5
0296:  MOVWF  08
0297:  BCF    03.5
0298:  MOVF   41,W
0299:  MOVWF  08
....................    if(i<7){  
029A:  MOVF   2E,W
029B:  SUBLW  06
029C:  BTFSS  03.0
029D:  GOTO   2D1
....................       bit_set(output, i);  
029E:  MOVLW  01
029F:  MOVWF  77
02A0:  MOVF   2E,W
02A1:  MOVWF  78
02A2:  BTFSC  03.2
02A3:  GOTO   2A8
02A4:  BCF    03.0
02A5:  RLF    77,F
02A6:  DECFSZ 78,F
02A7:  GOTO   2A4
02A8:  MOVF   77,W
02A9:  IORWF  41,F
....................       output_d(output);  
02AA:  MOVLW  00
02AB:  BSF    03.5
02AC:  MOVWF  08
02AD:  BCF    03.5
02AE:  MOVF   41,W
02AF:  MOVWF  08
....................       set_timer1(65536-angulos[i]);  
02B0:  BCF    03.0
02B1:  RLF    2E,W
02B2:  ADDLW  31
02B3:  MOVWF  04
02B4:  INCF   04,F
02B5:  MOVF   00,W
02B6:  MOVWF  7A
02B7:  DECF   04,F
02B8:  MOVF   00,W
02B9:  SUBLW  00
02BA:  MOVWF  4E
02BB:  CLRF   4F
02BC:  MOVF   7A,W
02BD:  BTFSS  03.0
02BE:  INCFSZ 7A,W
02BF:  SUBWF  4F,F
02C0:  MOVLW  01
02C1:  MOVWF  50
02C2:  MOVLW  00
02C3:  BTFSS  03.0
02C4:  MOVLW  01
02C5:  SUBWF  50,F
02C6:  CLRF   51
02C7:  MOVLW  00
02C8:  BTFSS  03.0
02C9:  MOVLW  01
02CA:  SUBWF  51,F
02CB:  MOVF   4F,W
02CC:  MOVWF  0F
02CD:  MOVF   4E,W
02CE:  MOVWF  0E
....................       ++i;  
02CF:  INCF   2E,F
....................    }else{  
02D0:  GOTO   3FC
....................       ///////////// FAZ DELAY DE TEMPO BAIXO //////////////  
....................       i=0;  
02D1:  CLRF   2E
....................       output=0;  
02D2:  CLRF   41
....................       output_d(output);  
02D3:  MOVLW  00
02D4:  BSF    03.5
02D5:  MOVWF  08
02D6:  BCF    03.5
02D7:  MOVF   41,W
02D8:  MOVWF  08
....................       set_timer1(30736+soma_angulos); //set_timer1(55536);  
02D9:  MOVLW  10
02DA:  ADDWF  3F,W
02DB:  MOVWF  4E
02DC:  MOVF   40,W
02DD:  MOVWF  4F
02DE:  BTFSC  03.0
02DF:  INCF   4F,F
02E0:  MOVLW  78
02E1:  ADDWF  4F,F
02E2:  MOVF   4F,W
02E3:  MOVWF  0F
02E4:  MOVF   4E,W
02E5:  MOVWF  0E
....................       if(!input(SWITCH_RS_AD)){  
02E6:  BSF    03.5
02E7:  BSF    06.1
02E8:  BCF    03.5
02E9:  BTFSC  06.1
02EA:  GOTO   3FC
....................          //////////// FAZ AQUISIÇÃO CASO CHAVE DESLIGADA //////////////  
....................          int ang;  
....................          for (k = 0; k < 7; ++k){  
02EB:  CLRF   30
02EC:  MOVF   30,W
02ED:  SUBLW  06
02EE:  BTFSS  03.0
02EF:  GOTO   388
....................             set_adc_channel( k );  
02F0:  RLF    30,W
02F1:  MOVWF  77
02F2:  RLF    77,F
02F3:  RLF    77,F
02F4:  MOVLW  F8
02F5:  ANDWF  77,F
02F6:  MOVF   1F,W
02F7:  ANDLW  C7
02F8:  IORWF  77,W
02F9:  MOVWF  1F
....................             delay_us(20);  
02FA:  MOVLW  06
02FB:  MOVWF  77
02FC:  DECFSZ 77,F
02FD:  GOTO   2FC
02FE:  NOP
....................             temp = read_adc();  
02FF:  BSF    1F.2
0300:  BTFSC  1F.2
0301:  GOTO   300
0302:  BSF    03.5
0303:  MOVF   1E,W
0304:  BCF    03.5
0305:  MOVWF  2C
0306:  MOVF   1E,W
0307:  MOVWF  2D
....................             angulos[k] = (float)temp*1.7595+600; //angulos[k] = temp*2+500;  
0308:  BCF    03.0
0309:  RLF    30,W
030A:  ADDLW  31
030B:  MOVWF  04
030C:  MOVF   2D,W
030D:  MOVWF  50
030E:  MOVF   2C,W
030F:  MOVWF  4F
0310:  GOTO   035
0311:  MOVF   77,W
0312:  MOVWF  4F
0313:  MOVF   78,W
0314:  MOVWF  50
0315:  MOVF   79,W
0316:  MOVWF  51
0317:  MOVF   7A,W
0318:  MOVWF  52
0319:  MOVWF  56
031A:  MOVF   79,W
031B:  MOVWF  55
031C:  MOVF   78,W
031D:  MOVWF  54
031E:  MOVF   77,W
031F:  MOVWF  53
0320:  MOVLW  4C
0321:  MOVWF  5A
0322:  MOVLW  37
0323:  MOVWF  59
0324:  MOVLW  61
0325:  MOVWF  58
0326:  MOVLW  7F
0327:  MOVWF  57
0328:  GOTO   055
0329:  MOVF   77,W
032A:  MOVWF  53
032B:  MOVF   78,W
032C:  MOVWF  54
032D:  MOVF   79,W
032E:  MOVWF  55
032F:  MOVF   7A,W
0330:  MOVWF  56
0331:  MOVF   04,W
0332:  MOVWF  57
0333:  BCF    03.1
0334:  MOVF   7A,W
0335:  MOVWF  5B
0336:  MOVF   79,W
0337:  MOVWF  5A
0338:  MOVF   78,W
0339:  MOVWF  59
033A:  MOVF   77,W
033B:  MOVWF  58
033C:  CLRF   5F
033D:  CLRF   5E
033E:  MOVLW  16
033F:  MOVWF  5D
0340:  MOVLW  88
0341:  MOVWF  5C
0342:  GOTO   0CD
0343:  MOVF   57,W
0344:  MOVWF  04
0345:  MOVF   7A,W
0346:  MOVWF  5B
0347:  MOVF   79,W
0348:  MOVWF  5A
0349:  MOVF   78,W
034A:  MOVWF  59
034B:  MOVF   77,W
034C:  MOVWF  58
034D:  GOTO   20E
034E:  INCF   04,F
034F:  MOVF   79,W
0350:  MOVWF  00
0351:  DECF   04,F
0352:  MOVF   78,W
0353:  MOVWF  00
....................             ang = (signed long)(angulos[k]-1500)*2/15+121;  
0354:  BCF    03.0
0355:  RLF    30,W
0356:  ADDLW  31
0357:  MOVWF  04
0358:  INCF   04,F
0359:  MOVF   00,W
035A:  MOVWF  4F
035B:  DECF   04,F
035C:  MOVF   00,W
035D:  MOVWF  4E
035E:  MOVLW  DC
035F:  SUBWF  4E,W
0360:  MOVWF  50
0361:  MOVF   4F,W
0362:  MOVWF  51
0363:  MOVLW  05
0364:  BTFSS  03.0
0365:  MOVLW  06
0366:  SUBWF  51,F
0367:  MOVF   51,W
0368:  MOVWF  57
0369:  MOVF   50,W
036A:  MOVWF  56
036B:  CLRF   59
036C:  MOVLW  02
036D:  MOVWF  58
036E:  CALL   230
036F:  MOVF   79,W
0370:  MOVWF  52
0371:  MOVF   78,W
0372:  MOVWF  51
0373:  MOVF   79,W
0374:  MOVWF  58
0375:  MOVF   78,W
0376:  MOVWF  57
0377:  CLRF   5A
0378:  MOVLW  0F
0379:  MOVWF  59
037A:  CALL   245
037B:  MOVF   78,W
037C:  MOVWF  52
037D:  MOVLW  79
037E:  ADDWF  78,W
037F:  MOVWF  78
0380:  MOVF   79,W
0381:  MOVWF  7A
0382:  BTFSC  03.0
0383:  INCF   7A,F
0384:  MOVF   78,W
0385:  MOVWF  4D
....................          }  
0386:  INCF   30,F
0387:  GOTO   2EC
....................          soma_angulos = angulos[0]+angulos[1]+angulos[2]+angulos[3]  
....................                         +angulos[4]+angulos[5]+angulos[6];  
0388:  MOVF   33,W
0389:  ADDWF  31,W
038A:  MOVWF  4E
038B:  MOVF   32,W
038C:  MOVWF  4F
038D:  BTFSC  03.0
038E:  INCF   4F,F
038F:  MOVF   34,W
0390:  ADDWF  4F,F
0391:  MOVF   35,W
0392:  ADDWF  4E,W
0393:  MOVWF  50
0394:  MOVF   4F,W
0395:  MOVWF  51
0396:  BTFSC  03.0
0397:  INCF   51,F
0398:  MOVF   36,W
0399:  ADDWF  51,F
039A:  MOVF   37,W
039B:  ADDWF  50,W
039C:  MOVWF  52
039D:  MOVF   51,W
039E:  MOVWF  53
039F:  BTFSC  03.0
03A0:  INCF   53,F
03A1:  MOVF   38,W
03A2:  ADDWF  53,F
03A3:  MOVF   39,W
03A4:  ADDWF  52,W
03A5:  MOVWF  54
03A6:  MOVF   53,W
03A7:  MOVWF  55
03A8:  BTFSC  03.0
03A9:  INCF   55,F
03AA:  MOVF   3A,W
03AB:  ADDWF  55,F
03AC:  MOVF   3B,W
03AD:  ADDWF  54,W
03AE:  MOVWF  56
03AF:  MOVF   55,W
03B0:  MOVWF  57
03B1:  BTFSC  03.0
03B2:  INCF   57,F
03B3:  MOVF   3C,W
03B4:  ADDWF  57,F
03B5:  MOVF   3D,W
03B6:  ADDWF  56,W
03B7:  MOVWF  3F
03B8:  MOVF   57,W
03B9:  MOVWF  40
03BA:  BTFSC  03.0
03BB:  INCF   40,F
03BC:  MOVF   3E,W
03BD:  ADDWF  40,F
....................   
....................          if(kbhit()){  
03BE:  BTFSS  0C.5
03BF:  GOTO   3F6
....................             trata_rs232();  
....................          }  
....................          output_low(LED_1);  
*
03F6:  BCF    42.2
03F7:  MOVF   42,W
03F8:  BSF    03.5
03F9:  MOVWF  07
03FA:  BCF    03.5
03FB:  BCF    07.2
*
0433:  MOVLW  FF
0434:  MOVWF  42
....................       }  
....................    }  
.................... }  
....................   
....................   
*
03FC:  BCF    0C.0
03FD:  BCF    0A.3
03FE:  BCF    0A.4
03FF:  GOTO   01F
.................... void main() {  
....................    set_tris_a(0b11111111);  
0400:  CLRF   04
0401:  MOVLW  1F
0402:  ANDWF  03,F
0403:  BSF    03.5
0404:  BSF    1F.0
0405:  BSF    1F.1
0406:  BSF    1F.2
0407:  BCF    1F.3
0408:  MOVLW  07
0409:  BCF    03.5
040A:  MOVWF  1F
040B:  MOVLW  0C
040C:  BSF    03.5
040D:  MOVWF  19
040E:  MOVLW  26
040F:  MOVWF  18
0410:  MOVLW  90
0411:  BCF    03.5
0412:  MOVWF  18
*
0435:  MOVLW  FF
0436:  BSF    03.5
0437:  MOVWF  05
....................    set_tris_d(0b00000000);  
0438:  MOVLW  00
0439:  MOVWF  08
....................    setup_port_a( ALL_ANALOG );  
043A:  BCF    1F.0
043B:  BCF    1F.1
043C:  BCF    1F.2
043D:  BCF    1F.3
....................    setup_adc( ADC_CLOCK_DIV_16 );  
043E:  BSF    1F.6
043F:  BCF    03.5
0440:  BSF    1F.6
0441:  BCF    1F.7
0442:  BSF    03.5
0443:  BSF    1F.7
0444:  BCF    03.5
0445:  BSF    1F.0
....................   
....................    setup_timer_1 ( T1_INTERNAL | T1_DIV_BY_1 );  
0446:  MOVLW  85
0447:  MOVWF  10
....................    enable_interrupts (global);  
0448:  MOVLW  C0
0449:  IORWF  0B,F
....................    //enable_interrupts(INT_RDA);  
....................    enable_interrupts (int_timer1);  
044A:  BSF    03.5
044B:  BSF    0C.0
....................    set_timer1(0);  
044C:  BCF    03.5
044D:  CLRF   0F
044E:  CLRF   0E
....................   
....................    while (true){  
....................       output_high(LED_1);  
044F:  BCF    42.2
0450:  MOVF   42,W
0451:  BSF    03.5
0452:  MOVWF  07
0453:  BCF    03.5
0454:  BSF    07.2
....................       if(input(SWITCH_RS_AD)){  
0455:  BSF    03.5
0456:  BSF    06.1
0457:  BCF    03.5
0458:  BTFSS  06.1
0459:  GOTO   4D9
....................          //////// RECEBE ANGULOS POR RS232 CASO CHAVE LIGADA ////////  
....................          for (j = 0; j < 7; ++j){  
045A:  CLRF   2F
045B:  MOVF   2F,W
045C:  SUBLW  06
045D:  BTFSS  03.0
045E:  GOTO   4A3
....................             putc(j+1);  
045F:  MOVLW  01
0460:  ADDWF  2F,W
0461:  MOVWF  43
0462:  MOVF   43,W
0463:  BTFSS  0C.4
0464:  GOTO   463
0465:  MOVWF  19
....................             valorint = getc();  
0466:  BTFSS  0C.5
0467:  GOTO   466
0468:  MOVF   1A,W
0469:  CLRF   7A
046A:  MOVWF  2A
046B:  MOVF   7A,W
046C:  MOVWF  2B
....................             valorint = valorint - 100;  
046D:  MOVLW  64
046E:  SUBWF  2A,F
046F:  MOVLW  00
0470:  BTFSS  03.0
0471:  MOVLW  01
0472:  SUBWF  2B,F
....................             angulos[j] = valorint*15/2 + 1500;  
0473:  BCF    03.0
0474:  RLF    2F,W
0475:  ADDLW  31
0476:  MOVWF  04
0477:  CLRF   28
0478:  BTFSC  0B.7
0479:  BSF    28.7
047A:  BCF    0B.7
047B:  MOVF   2B,W
047C:  MOVWF  57
047D:  MOVF   2A,W
047E:  MOVWF  56
047F:  CLRF   59
0480:  MOVLW  0F
0481:  MOVWF  58
0482:  CALL   230
0483:  BTFSC  28.7
0484:  BSF    0B.7
0485:  MOVF   79,W
0486:  MOVWF  45
0487:  MOVF   78,W
0488:  MOVWF  44
0489:  CLRF   28
048A:  BTFSC  0B.7
048B:  BSF    28.7
048C:  BCF    0B.7
048D:  MOVF   79,W
048E:  MOVWF  58
048F:  MOVF   78,W
0490:  MOVWF  57
0491:  CLRF   5A
0492:  MOVLW  02
0493:  MOVWF  59
0494:  CALL   245
0495:  BTFSC  28.7
0496:  BSF    0B.7
0497:  MOVLW  DC
0498:  ADDWF  78,W
0499:  MOVWF  00
049A:  INCF   04,F
049B:  MOVF   79,W
049C:  MOVWF  00
049D:  BTFSC  03.0
049E:  INCF   00,F
049F:  MOVLW  05
04A0:  ADDWF  00,F
....................          }  
04A1:  INCF   2F,F
04A2:  GOTO   45B
....................          soma_angulos = angulos[0]+angulos[1]+angulos[2]+angulos[3]  
....................                         +angulos[4]+angulos[5]+angulos[6];  
04A3:  MOVF   33,W
04A4:  ADDWF  31,W
04A5:  MOVWF  43
04A6:  MOVF   32,W
04A7:  MOVWF  44
04A8:  BTFSC  03.0
04A9:  INCF   44,F
04AA:  MOVF   34,W
04AB:  ADDWF  44,F
04AC:  MOVF   35,W
04AD:  ADDWF  43,W
04AE:  MOVWF  45
04AF:  MOVF   44,W
04B0:  MOVWF  46
04B1:  BTFSC  03.0
04B2:  INCF   46,F
04B3:  MOVF   36,W
04B4:  ADDWF  46,F
04B5:  MOVF   37,W
04B6:  ADDWF  45,W
04B7:  MOVWF  47
04B8:  MOVF   46,W
04B9:  MOVWF  48
04BA:  BTFSC  03.0
04BB:  INCF   48,F
04BC:  MOVF   38,W
04BD:  ADDWF  48,F
04BE:  MOVF   39,W
04BF:  ADDWF  47,W
04C0:  MOVWF  49
04C1:  MOVF   48,W
04C2:  MOVWF  4A
04C3:  BTFSC  03.0
04C4:  INCF   4A,F
04C5:  MOVF   3A,W
04C6:  ADDWF  4A,F
04C7:  MOVF   3B,W
04C8:  ADDWF  49,W
04C9:  MOVWF  4B
04CA:  MOVF   4A,W
04CB:  MOVWF  4C
04CC:  BTFSC  03.0
04CD:  INCF   4C,F
04CE:  MOVF   3C,W
04CF:  ADDWF  4C,F
04D0:  MOVF   3D,W
04D1:  ADDWF  4B,W
04D2:  MOVWF  3F
04D3:  MOVF   4C,W
04D4:  MOVWF  40
04D5:  BTFSC  03.0
04D6:  INCF   40,F
04D7:  MOVF   3E,W
04D8:  ADDWF  40,F
....................       }  
....................    }  
04D9:  GOTO   44F
.................... }  
....................  
04DA:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
